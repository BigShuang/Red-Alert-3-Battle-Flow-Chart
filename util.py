# usr/bin/env python3
# -*- coding:utf-8- -*-
"""
This is a script file, works to read path info of all units in different various types
in the three camps folders under the images/nodes folder in this project, then write into js/info.js .
It's OK to manually modify JS/ info.js if you do not run this script,
In Chinese: 这是一个脚本文件，用于将本项目中images/nodes文件夹下，三个阵营的各个种类的单位图片信息，
读取并写入到js/info.js中，如果不运行本脚本，手动修改js/info.js也可以
"""
import os

INDENT = "    "
NODES_PATH = os.path.join("images", "nodes")
JS_FILE = "info.js"


def gen_path_dict_string(dir_path, depth=0):
    """
    generate path info of a folder directory
    :param dir_path: path of the folder to be generated
    :param depth: The number of folder levels relative to the root directory, used to determine indent length
    :return: a string containing path info of a folder directory
        for an example, if dir_path is 'images/nodes/Allied', the return value is as below:
        {
        "Aircraft": {
            "RA3 Apollo Fighter Icons": "images/nodes/Allied/Aircraft/RA3 Apollo Fighter Icons.png",
            "RA3 Century Bomber Icons": "images/nodes/Allied/Aircraft/RA3 Century Bomber Icons.png",
            ......
        },
        "Defenses": {
            "RA3 Allied Fortress Wall Icons": "images/nodes/Allied/Defenses/RA3 Allied Fortress Wall Icons.png",
            "RA3 Chronosphere Icons": "images/nodes/Allied/Defenses/RA3 Chronosphere Icons.png",
            ......
        },
        ......
    }
    """
    var_str = '{\n'
    for a in os.listdir(dir_path):
        a_path = os.path.join(dir_path, a)
        if os.path.isdir(a_path):
            var_str += '{}"{}": {},\n'.format(INDENT*(depth+1), a, gen_path_dict_string(a_path, depth+1))
        elif os.path.splitext(a)[1] in [".png"]:
            var_str += '{}"{}": "{}",\n'.format(INDENT*(depth+1), os.path.splitext(a)[0], a_path.replace("\\", "/"))
    
    var_str += INDENT*depth + '}'
    
    return var_str


def export_to_js(nodes_path, js_file):
    """
    Export the path info of all unit nodes in nodes_path to a js file(js_file)
    :param nodes_path: the root path of all unit nodes.
    :param js_file: export to this js file.
    :return:
    """
    node_str = gen_path_dict_string(nodes_path)
    content = "// Generated by util.py\n"
    content += "var node_imgs = {}\n".format(node_str)
    with open(js_file, 'w') as f:
        f.write(content)


if __name__ == '__main__':
    export_to_js(NODES_PATH, JS_FILE)
    # An example of function gen_path_dict_string
    # print(gen_path_dict_string("images/nodes/Allied"))
